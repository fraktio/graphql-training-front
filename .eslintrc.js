module.exports = {
  extends: [
    "standard",
    "standard-react",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:switch-case/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended",
  ],
  plugins: ["switch-case", "react"],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    createDefaultProgram: true,
    project: "./tsconfig.json",
  },
  rules: {
    "newline-per-chained-call": ["error", { ignoreChainWithDepth: 3 }],
    "no-process-env": "error",
    "prettier/prettier": [
      "error",
      { endOfLine: "auto", trailingComma: "all", tabWidth: 2 },
    ],
    "no-param-reassign": ["error", { props: true }],
    "switch-case/newline-between-switch-case": [
      "error",
      "always",
      { fallthrough: "never" },
    ],
    "padding-line-between-statements": [
      "error",
      { blankLine: "always", prev: "*", next: "return" },
    ],
    "no-unreachable": "error",
    "prefer-object-spread": 0,
    "one-var": ["error", "never"],
    "prefer-destructuring": ["error", { object: true, array: true }],
    "no-console": 2,
    "no-debugger": 2,
    "no-alert": 2,
    "no-await-in-loop": 2,
    "generator-star-spacing": ["error", { before: false, after: true }],
    "func-style": ["error", "declaration", { allowArrowFunctions: true }],
    "no-nested-ternary": "error",
    "no-use-before-define": 0,
    curly: ["error", "all"],
    "arrow-body-style": ["error", "as-needed"],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-unused-vars": ["error", { varsIgnorePattern: "^_" }],
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "import/newline-after-import": ["error", { count: 1 }],
    "import/no-relative-parent-imports": "error",
    "import/order": [
      "error",
      {
        alphabetize: {
          order: "asc",
        },
        groups: [
          ["builtin", "external"],
          "internal",
          "parent",
          ["sibling", "index"],
        ],
        "newlines-between": "always",
      },
    ],
    "max-len": [
      "error",
      {
        code: 80,
        tabWidth: 2,
        comments: 80,
        ignoreUrls: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
        ignorePattern: "^import\\s.+\\sfrom\\s.+;$",
      },
    ],
    "max-depth": ["error", 5],
    complexity: ["error", 8],
    "max-statements": ["error", 14],
    "max-params": ["error", 2],
    "lines-between-class-members": [
      "error",
      "always",
      { exceptAfterSingleLine: true },
    ],
    "no-trailing-spaces": "error",
    semi: ["error", "always"],
    quotes: ["error", "double"],
    "comma-dangle": ["error", "always-multiline"],
    "space-before-function-paren": [
      "error",
      { anonymous: "always", named: "never", asyncArrow: "always" },
    ],
    "array-bracket-newline": ["error", "consistent"],
    "no-else-return": ["error", { allowElseIf: false }],
    "import/no-cycle": [2, { maxDepth: 3, ignoreExternal: false }],
    "import/no-self-import": "error",
    "no-restricted-syntax": [
      "error",
      {
        selector: "ExportDefaultDeclaration",
        message: "Prefer named exports",
      },
    ],
    "no-restricted-imports": [
      "error",
      {
        patterns: [".*"],
      },
    ],
    "max-lines": ["error", 400],
    "prefer-const": "error",

    // React
    "react/no-deprecated": 2,
    "react-hooks/rules-of-hooks": 2,
    "react/no-typos": 2,
    "react/prop-types": 0,
    "react/jsx-curly-newline": 0,
    "react/no-array-index-key": 2,
    "react/jsx-uses-vars": ["error"],
    "react-hooks/exhaustive-deps": "error",
    "react/jsx-handler-names": [
      2,
      {
        eventHandlerPrefix: "handle",
        eventHandlerPropPrefix: "on",
        checkLocalVariables: true,
        checkInlineFunction: true,
      },
    ],
    "react/jsx-sort-props": [
      0,
      {
        shorthandLast: true,
        callbacksLast: true,
        reservedFirst: ["key"],
      },
    ],
    "react/jsx-max-depth": [2, { max: 8 }],
    "react/boolean-prop-naming": [
      2,
      {
        rule: "^(is|has|show)[A-Z]([A-Za-z0-9]?)+",
        validateNested: true,
      },
    ],
    "react/react-in-jsx-scope": "off",
  },
};
